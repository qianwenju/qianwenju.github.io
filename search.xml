<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1-RNAseq--测序原始数据处理（Clean  data）</title>
    <url>/2020/03/16/1-RNAseq--%E6%B5%8B%E5%BA%8F%E5%8E%9F%E5%A7%8B%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%EF%BC%88Clean%20%20data%EF%BC%89/</url>
    <content><![CDATA[<h1 id="fastq文件"><a href="#fastq文件" class="headerlink" title="fastq文件"></a>fastq文件</h1><p>一般我们从公司里得到的原始测序数据都是属于fastq.gz文件, .gz是一种压缩格式的缩写，于是首先第一步是对这些压缩格式进行解压操作<br><img src="https://upload-images.jianshu.io/upload_images/3194654-6c7f1ae724836c1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gzip -d 19R576_combined_R1.fastq.gz 19R576_combined_R2.fastq.gz 19R577_combined_R1.fastq.gz 19R577_combined_R2.fastq.gz</span><br></pre></td></tr></table></figure>
<p>解压好的文件即正常的Fastq文件，当然这里只是演示一下Fastq.gz是怎样解压的，给大家看一下即可，建议还是暂时不用解压，以为后面将介绍的测序质控还是用的压缩格式的gz文件作为输入文件<br><img src="https://upload-images.jianshu.io/upload_images/3194654-0960d9117ba7b837.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>首先先简单介绍一下什么是fataq文件</p>
<p>在illumina的测序文件中，采用双端测序（paired-end），一个样本得到的是seq_1.fastq.gz和seq_2.fastq.gz两个文件，每个文件存放一段测序文件。在illumina的测序的cDNA短链被修饰为以下形式（图源见水印）：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-34575c8f297fc99e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>两端的序列是保护碱基（terminal sequence）、接头序列（adapter）、索引序列（index）、引物结合位点（Primer Binding Site）：其中 adapter是和flowcell上的接头互补配对结合的；index是一段特异序列，加入index是为了提高illumina测序仪的使用率，因为同一个泳道可能会测序多个样品，样品间的区分就是通过index区分。参考：<a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/hanli1992/article/details/82980042">illumina 双端测序（pair end）</a>、<a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/b18ee79a0285">双端测序中read1和read2的关系</a>。</p>
<p>在illumina公司测得的序列文件经过处理以fastq文件协议存储为*.fastq格式文件。在fastq文件中每4行存储一个read。</p>
<p><strong>第一行</strong>：以@开头接ReadID和其他信息，分别介绍了 <strong>第二行</strong>：read测序信息 <strong>第三行</strong>：规定必须以“+”开头，后面跟着可选的ID标识符和可选的描述内容，如果“+”后面有内容，该内容必须与第一行“@”后的内容相同 <strong>第四行</strong>：每个碱基的质量得分。记分方法是利用ERROR P经过对数和运算分为40个级别分别与ASCII码的第33号<code>!</code>和第73号<code>I</code>对应。用ASCII码表示碱基质量是为了减少文件空间占据和防止移码导致的数据损失。fastq文件预览如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-3a962a7125288d55.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="对数据进行质控（去接头和低质量的reads以及Fastqc）"><a href="#对数据进行质控（去接头和低质量的reads以及Fastqc）" class="headerlink" title="对数据进行质控（去接头和低质量的reads以及Fastqc）"></a>对数据进行质控（去接头和低质量的reads以及Fastqc）</h1><p>为什么要对数据进行clean data这一步呢，主要是在测序过程中加入了接头序列（便于测序），以及测序过程中产生的一些低质量的reads, 如果不事先对这些进行筛选的很有可能会影响之后进行序列比对。</p>
<p>这里给大家介绍的就是数据质控界常用的——Trimmomatic软件。</p>
<h2 id="Trimmomatic-简介"><a href="#Trimmomatic-简介" class="headerlink" title="Trimmomatic 简介"></a>Trimmomatic 简介</h2><p>Trimmomatic软件，2014年首次发表在Bioinformatics期刊上，是一款专门对Illumina平台测序产生的reads进行修剪和过滤的软件。自发表以来，Trimmomatic软件凭借其简单的安装方法、较快的运行速度（支持多线程）、强大的去接头能力（simple和palindrome两种模式）、多元化的低质量数据处理方式、人性化的输出格式（clean reads为一一对应的pair-end形式，无需再次处理）等特点，深受数据处理者喜爱！下面就由小奥带大家一起来学习下Trimmomatic的具体用法。</p>
<h3 id="Trimmomatic-下载"><a href="#Trimmomatic-下载" class="headerlink" title="Trimmomatic 下载"></a>Trimmomatic 下载</h3><h4 id="一-在Linux系统下通过命令行进行下载安装"><a href="#一-在Linux系统下通过命令行进行下载安装" class="headerlink" title="(一)在Linux系统下通过命令行进行下载安装"></a>(一)在Linux系统下通过命令行进行下载安装</h4><p><strong>1.mkdir Trimmomatic</strong>（创建一个名为Trimmomatic的文件夹）</p>
<p><strong>2.cd Trimmomatic</strong> （进入Trimmomatic文件夹工作路径下）</p>
<p><strong>3.wget <a href="http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip" target="_blank" rel="noopener">http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip</a></strong>（通过wget命令下载Trimmomatic-0.38.zip压缩文件）</p>
<p><strong>4.unzip Trimmomatic-0.38.zip</strong> （解压缩Trimmomatic-0.36.zip文件）</p>
<p><strong>5.java -jar~/biosoft/Trimmomatic/Trimmomatic-0.36/trimmomatic-0.36.jar –h</strong>（运行安装命令，即可完成安装）</p>
<h5 id="二-通过conda直接一键安装"><a href="#二-通过conda直接一键安装" class="headerlink" title="(二)通过conda直接一键安装"></a>(二)通过conda直接一键安装</h5><p>先search一下到底conda可不可以搜索到软件安装的channel</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda search trimmomatic</span><br></pre></td></tr></table></figure>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-77a0deec5c5d4532.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>反馈显示可以从相应的channel中找到trimmomatic软件<br>于是直接用conda一键安装</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install trimmomatic</span><br></pre></td></tr></table></figure>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-88c5b49855d0817a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>安装完成</p>
<h3 id="Trimmomatic-质控用法"><a href="#Trimmomatic-质控用法" class="headerlink" title="Trimmomatic 质控用法"></a>Trimmomatic 质控用法</h3><p>根据单端测序和双端测序两种模式，Trimmomatic软件也有两种质控用法</p>
<h5 id="◆-1-SE-模式"><a href="#◆-1-SE-模式" class="headerlink" title="◆ 1. SE 模式"></a>◆ 1. SE 模式</h5><p>SE模式下，只有一个输入文件和一个质控后的输出文件，运行命令如下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Java –jar &lt; trimmomatic的安装路径&gt; SE –threads &lt;线程数&gt; &lt;input&gt; &lt;output&gt; &lt;step1&gt; &lt;step2&gt; …&lt;step1&gt;&lt;step2&gt;… 表示每一步的质控参数</span><br></pre></td></tr></table></figure>
<h5 id="◆-2-PE模式"><a href="#◆-2-PE模式" class="headerlink" title="◆ 2. PE模式"></a>◆ 2. PE模式</h5><p>PE 模式下，有两个输入文件（正向测序reads和反向测序reads）和四个质控后的输出文件（双端序列都保留的paired序列文件和只保留一端序列的unpaired序列文件），运行命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java -jar $trimmomatic PE -threads 12 -phred33 $R1.fq.gz $R2.fq.gz $R1.paired.fq.gz $R1.unpaired.fq.gz $R2.paired.fq.gz $R2.unpaired.fq.gz ILLUMINACLIP:$adapter.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36</span><br></pre></td></tr></table></figure>
<blockquote>
<p>参数设置说明（同一个命令下的不同参数可以用“：”来界定）：<br>$ 表示软件或文件所在的路径（建议使用绝对路径）<br> 其中<strong>R1.fq.gz</strong>以及 <strong>R2.fq.gz</strong> 为两个输入文件<br><strong>R1.paired.fq.gz</strong> 、<strong>R1.unpaired.fq.gz</strong>、 <strong>R2.paired.fq.gz</strong> 、<strong>R2.unpaired.fq.gz</strong> 为四个对应的输出文件<br>Phred33 设置碱基的质量格式，默认的是-phred64。</p>
</blockquote>
<blockquote>
<p>ILLUMINACLIP:$adapter.fa:2:30:10 adapter.fa为接头文件，2表示最大mismatch数，30表示palindrome模式下碱基的匹配阈值，10表示simple模式下碱基的匹配阈值。<br>LEADING: 3 表示切除reads 5’端碱基质量低于3的碱基。<br>TRAILING:3 表示切除3’ 端碱基质量低于3的碱基。<br>SLIDINGWINDOW:4:15 表示以4个碱基为窗口进行滑动，切除窗口内碱基平均质量小于15的。<br>MINLEN:36 丢弃以上步骤处理后，序列长度小于36的reads。</p>
</blockquote>
<p>运行代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">trimmomatic PE -threads 12 -phred33 &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_combined_R1.fastq.gz  &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_combined_R2.fastq.gz  &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_combined_R1.paired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_c</span><br><span class="line">ombined_R1.unpaired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_combined_R2.paired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R576_combined_R2.unpaired.fq.gz ILLUMINACLI</span><br><span class="line">P:$adapter.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36 ; trimmomatic PE -threads 12 -phred33 &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577_combined_R1.fastq.gz  &#x2F;mnt&#x2F;e&#x2F;</span><br><span class="line">sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577_combined_R2.fastq.gz  &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577_combined_R1.paired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577</span><br><span class="line">_combined_R1.unpaired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577_combined_R2.paired.fq.gz &#x2F;mnt&#x2F;e&#x2F;sequence_data_YNY&#x2F;20191030_NGS_DATA&#x2F;19R577_combined_R2.unpaired.fq.gz ILLUMINAC</span><br><span class="line">LIP:$adapter.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36</span><br></pre></td></tr></table></figure>

<p><img src="https://upload-images.jianshu.io/upload_images/3194654-b32de3de66fa88f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="开始执行去接头"></p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-df2d26db48586472.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="运行结束"></p>
<p>最终运行出的结果输出文件有四个，R1.paired.fq.gz 、R1.unpaired.fq.gz、 R2.paired.fq.gz 、R2.unpaired.fq.gz ，如果在接下来要进行序列比对的话用的文件只需要使用到两个paired文件。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-7162d46bf4432054.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="输出结果"></p>
<p>到这里，我们的RNAseq流程中的原始数据处理(clean data)这一步就已经到这里就告一段落了。</p>
<h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p><a href="https://www.sohu.com/a/252244330_100269283" target="_blank" rel="noopener">https://www.sohu.com/a/252244330_100269283</a><br><a href="https://zhuanlan.zhihu.com/p/61847802" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/61847802</a></p>
]]></content>
      <tags>
        <tag>bioinformatics</tag>
        <tag>fastq</tag>
        <tag>fastqc</tag>
        <tag>Trimmomatic</tag>
      </tags>
  </entry>
  <entry>
    <title>Conda的安装与使用</title>
    <url>/2020/03/15/conda%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="conda简介"><a href="#conda简介" class="headerlink" title="conda简介"></a>conda简介</h2><p>Conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换。 Conda 是为 Python 程序创建的，适用于 Linux，OS X 和Windows，也可以打包和分发其他软件。</p>
<h2 id="安装conda"><a href="#安装conda" class="headerlink" title="安装conda"></a>安装conda</h2><p>conda分为anaconda和miniconda。anaconda是包含一些常用包的版本（这里的常用不代表你常用），miniconda则是精简版，需要啥装啥，所以推荐使用miniconda。</p>
<h3 id="下载网址"><a href="#下载网址" class="headerlink" title="下载网址"></a>下载网址</h3><blockquote>
<p>conda官网：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fconda.io%2Fminiconda.html" target="_blank" rel="noopener">https://conda.io/miniconda.html</a></p>
</blockquote>
<p>选择适合自己的版本，用wget命令下载。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget -c https:&#x2F;&#x2F;repo.continuum.io&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure>


<p>安装命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 777 Miniconda3-latest-Linux-x86_64.sh #给执行权限</span><br><span class="line">bash Miniconda3-latest-Linux-x86_64.sh #运行</span><br></pre></td></tr></table></figure>

<p>一路yes，安装成功</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-57b420a278cb4375.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安装完成"></p>
<h4 id="激活conda"><a href="#激活conda" class="headerlink" title="激活conda"></a>激活conda</h4><p>找到你刚才安装的miniconda，如果没有更改过安装位置的话应该是在/home下面，cd到miniconda3的bin目录下面，能看到有一个activate</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-3f719b7cac69dff4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>给activate添加一下权限才能使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#添加权限</span><br><span class="line">chmod 777 activate</span><br></pre></td></tr></table></figure>
<p>接下来启动conda</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .&#x2F;active</span><br><span class="line">#这两个点不是连在一起的</span><br></pre></td></tr></table></figure>
<p>需要注意一下的是/active前面的两个点之间不是连着一起的.<br>需要分开，其实这条命令也相当于source ./active</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-af308489c6e4e201.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当命令行前面出现(base)的时候说明现在已经在conda的环境中了。这时候输入conda list 命令就有反应了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda list</span><br></pre></td></tr></table></figure>
<p>以下是输入conda list 显示的结果</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-f865da90bdd4d2f1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="conda list"></p>
<h2 id="利用conda安装生物信息软件"><a href="#利用conda安装生物信息软件" class="headerlink" title="利用conda安装生物信息软件"></a>利用conda安装生物信息软件</h2><h3 id="安装命令"><a href="#安装命令" class="headerlink" title="安装命令:"></a>安装命令:</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install samtools</span><br></pre></td></tr></table></figure>

<h3 id="搜索需要的安装包"><a href="#搜索需要的安装包" class="headerlink" title="搜索需要的安装包:"></a>搜索需要的安装包:</h3><p>提供一个网址,用于事先查找想安装的软件存不存在<br><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fbioconda.github.io%2Frecipes" target="_blank" rel="noopener">conda available packages</a></p>
<p>当然, 也可以用这个命令进行搜索</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda search samtools</span><br></pre></td></tr></table></figure>
<p>提示错误，PackagesNotFoundError: The following packages are not available from current channels:，主要是没有为conda添加相应的下载软件安装包的channel</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-2bd50709bc07e4a7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>添加生物信息分析常用的channel，添加的是清华的镜像channel</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;</span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;</span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;</span><br><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;bioconda&#x2F;</span><br></pre></td></tr></table></figure>
<p>另外对channel常用的操作</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">显示安装的频道</span><br><span class="line"> conda config --set show_channel_urls yes </span><br><span class="line"></span><br><span class="line">查看已经添加的channels</span><br><span class="line">conda config --get channels</span><br><span class="line"></span><br><span class="line">已添加的channel在哪里查看</span><br><span class="line">vim ~&#x2F;.condarc</span><br></pre></td></tr></table></figure>


<p>添加完channel之后继续下载</p>
<p>利用conda安装生物信息软件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install samtools</span><br></pre></td></tr></table></figure>

<p>提示安装进程，显示安装完成</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-e948bc90562938d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>安装完成后，可以用“which 软件名”来查看该软件安装的位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">which samtools</span><br></pre></td></tr></table></figure>
<p>显示samtools的安装路径</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3194654-9ea2152bf864bc9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>搜索目前软件包有哪几个版本</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda search samtools</span><br></pre></td></tr></table></figure>


<p><img src="https://upload-images.jianshu.io/upload_images/3194654-995dd905543db1f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>如需要安装特定的版本:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install 软件名&#x3D;版本号</span><br><span class="line">conda samtools&#x3D;1.10</span><br></pre></td></tr></table></figure>
<p>这时conda会先卸载已安装版本，然后重新安装指定版本。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看已安装软件:</span><br><span class="line">conda list</span><br></pre></td></tr></table></figure>


<p>更新指定软件:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda update samtools</span><br></pre></td></tr></table></figure>

<p>卸载指定软件:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove gatk</span><br></pre></td></tr></table></figure>

<p>退出conda环境<br>退出也很简单，之前我们是. ./activate 或者 (. ~/miniconda3/bin/activate)现在退出只要:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">. .&#x2F;deactivate</span><br></pre></td></tr></table></figure>
<p>就退出当前的环境了</p>
<p><a href="https://www.jianshu.com/p/edaa744ea47d" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      <categories>
        <category>RNA-seq</category>
      </categories>
      <tags>
        <tag>bioinformatics</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
